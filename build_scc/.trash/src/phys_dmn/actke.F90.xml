<?xml version="1.0"?><object xmlns="http://fxtran.net/#syntax" source-form="FREE" source-width="500" openmp="0" openacc="0"><file name="src/local/arpifs/phys_dmn/actke.F90"><program-unit><subroutine-stmt>SUBROUTINE <subroutine-N><N><n>ACTKE</n></N></subroutine-N> (<dummy-arg-LT><arg-N><N><n>YDCST</n></N></arg-N>, <arg-N><N><n>YDLDDH</n></N></arg-N>, <arg-N><N><n>YDMDDH</n></N></arg-N>, <arg-N><N><n>YDML_PHY_MF</n></N></arg-N>, <arg-N><N><n>KIDIA</n></N></arg-N>, <arg-N><N><n>KFDIA</n></N></arg-N>, <arg-N><N><n>KLON</n></N></arg-N>, <arg-N><N><n>KTDIAT</n></N></arg-N>, <arg-N><N><n>KTDIAN</n></N></arg-N>, <arg-N><N><n>KLEV</n></N></arg-N>, <arg-N><N><n>PAPHI</n></N></arg-N>, <arg-N><N><n>PAPHIF</n></N></arg-N>, <arg-N><N><n>PAPRS</n></N></arg-N>, <arg-N><N><n>PAPRSF</n></N></arg-N>, <arg-N><N><n>PDELP</n></N></arg-N>, <arg-N><N><n>PR</n></N></arg-N>, <arg-N><N><n>PT</n></N></arg-N>, <arg-N><N><n>PU</n></N></arg-N>, <arg-N><N><n>PV</n></N></arg-N>, <arg-N><N><n>PQ</n></N></arg-N>, <arg-N><N><n>PQICONV</n></N></arg-N>, <arg-N><N><n>PQLCONV</n></N></arg-N>, <arg-N><N><n>PLSCPE</n></N></arg-N>, <arg-N><N><n>PCD</n></N></arg-N>, <arg-N><N><n>PCH</n></N></arg-N>, <arg-N><N><n>PGZ0</n></N></arg-N>, <arg-N><N><n>PTS</n></N></arg-N>, <arg-N><N><n>PQS</n></N></arg-N>, <arg-N><N><n>PQICE</n></N></arg-N>, <arg-N><N><n>PQLI</n></N></arg-N>, <arg-N><N><n>PECT</n></N></arg-N>, <arg-N><N><n>PPRODTH</n></N></arg-N>, <arg-N><N><n>PNLAB</n></N></arg-N>, <arg-N><N><n>PNLABCVP</n></N></arg-N>, <arg-N><N><n>PKTROV</n></N></arg-N>, <arg-N><N><n>PKQROV</n></N></arg-N>, <arg-N><N><n>PKQLROV</n></N></arg-N>, <arg-N><N><n>PKUROV</n></N></arg-N>, <arg-N><N><n>PXTROV</n></N></arg-N>, <arg-N><N><n>PXUROV</n></N></arg-N>, <arg-N><N><n>PNBVNO</n></N></arg-N>, <arg-N><N><n>PNEBS</n></N></arg-N>, <arg-N><N><n>PQCS</n></N></arg-N>, <arg-N><N><n>PNEBS0</n></N></arg-N>, <arg-N><N><n>PQCS0</n></N></arg-N>, <arg-N><N><n>PCOEFN</n></N></arg-N>, <arg-N><N><n>PFECT</n></N></arg-N>, <arg-N><N><n>PFECTI</n></N></arg-N>, <arg-N><N><n>PECT1</n></N></arg-N>, <arg-N><N><n>PTPRDY</n></N></arg-N>, <arg-N><N><n>PEDR</n></N></arg-N>, <arg-N><N><n>YDDDH</n></N></arg-N></dummy-arg-LT>)</subroutine-stmt>
<use-stmt>USE <module-N><N><n>MODEL_PHYSICS_MF_MOD</n></N></module-N>,ONLY:<rename-LT><rename><use-N><N><n>MODEL_PHYSICS_MF_TYPE</n></N></use-N></rename></rename-LT></use-stmt>
<use-stmt>USE <module-N><N><n>YOMMDDH</n></N></module-N>,ONLY:<rename-LT><rename><use-N><N><n>TMDDH</n></N></use-N></rename></rename-LT></use-stmt>
<use-stmt>USE <module-N><N><n>PARKIND1</n></N></module-N>,ONLY:<rename-LT><rename><use-N><N><n>JPIM</n></N></use-N></rename>, <rename><use-N><N><n>JPRB</n></N></use-N></rename></rename-LT></use-stmt>
<use-stmt>USE <module-N><N><n>YOMHOOK</n></N></module-N>,ONLY:<rename-LT><rename><use-N><N><n>LHOOK</n></N></use-N></rename>, <rename><use-N><N><n>DR_HOOK</n></N></use-N></rename>, <rename><use-N><N><n>JPHOOK</n></N></use-N></rename></rename-LT></use-stmt>
<use-stmt>USE <module-N><N><n>YOMCST</n></N></module-N>,ONLY:<rename-LT><rename><use-N><N><n>TCST</n></N></use-N></rename></rename-LT></use-stmt>
<use-stmt>USE <module-N><N><n>YOMLSFORC</n></N></module-N>,ONLY:<rename-LT><rename><use-N><N><n>LMUSCLFA</n></N></use-N></rename>, <rename><use-N><N><n>NMUSCLFA</n></N></use-N></rename></rename-LT></use-stmt>
<use-stmt>USE <module-N><N><n>YOMLDDH</n></N></module-N>,ONLY:<rename-LT><rename><use-N><N><n>TLDDH</n></N></use-N></rename></rename-LT></use-stmt>
<use-stmt>USE <module-N><N><n>DDH_MIX</n></N></module-N>,ONLY:<rename-LT><rename><use-N><N><n>ADD_FIELD_3D</n></N></use-N></rename>, <rename><use-N><N><n>TYP_DDH</n></N></use-N></rename>, <rename><use-N><N><n>NEW_ADD_FIELD_3D</n></N></use-N></rename></rename-LT></use-stmt>
<implicit-none-stmt>IMPLICIT NONE</implicit-none-stmt>
<T-decl-stmt><_T-spec_><derived-T-spec>TYPE (<T-N><N><n>TCST</n></N></T-N>)</derived-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>YDCST</n></N></EN-N></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><derived-T-spec>TYPE (<T-N><N><n>TLDDH</n></N></T-N>)</derived-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>YDLDDH</n></N></EN-N></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><derived-T-spec>TYPE (<T-N><N><n>TMDDH</n></N></T-N>)</derived-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>YDMDDH</n></N></EN-N></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><derived-T-spec>TYPE (<T-N><N><n>MODEL_PHYSICS_MF_TYPE</n></N></T-N>)</derived-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>YDML_PHY_MF</n></N></EN-N></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>INTEGER</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPIM</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>KIDIA</n></N></EN-N></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>INTEGER</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPIM</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>KFDIA</n></N></EN-N></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>INTEGER</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPIM</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>KLON</n></N></EN-N></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>INTEGER</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPIM</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>KTDIAT</n></N></EN-N></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>INTEGER</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPIM</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>KTDIAN</n></N></EN-N></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>INTEGER</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPIM</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>KLEV</n></N></EN-N></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PAPHI</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><lower-bound><literal-E><l>0</l></literal-E></lower-bound>:<upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PAPHIF</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PAPRS</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><lower-bound><literal-E><l>0</l></literal-E></lower-bound>:<upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PAPRSF</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PDELP</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PR</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PT</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PU</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PV</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PQ</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PQICONV</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PQLCONV</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PLSCPE</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PCD</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PCH</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PGZ0</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PTS</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PQS</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>INOUT</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PQICE</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>INOUT</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PQLI</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PECT</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PPRODTH</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><lower-bound><literal-E><l>0</l></literal-E></lower-bound>:<upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PNLAB</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PNLABCVP</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>OUT</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PKTROV</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><lower-bound><literal-E><l>0</l></literal-E></lower-bound>:<upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>OUT</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PKQROV</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><lower-bound><literal-E><l>0</l></literal-E></lower-bound>:<upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>OUT</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PKQLROV</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><lower-bound><literal-E><l>0</l></literal-E></lower-bound>:<upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>OUT</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PKUROV</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><lower-bound><literal-E><l>0</l></literal-E></lower-bound>:<upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>OUT</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PXTROV</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><lower-bound><literal-E><l>0</l></literal-E></lower-bound>:<upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>OUT</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PXUROV</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><lower-bound><literal-E><l>0</l></literal-E></lower-bound>:<upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>OUT</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PNBVNO</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><lower-bound><literal-E><l>0</l></literal-E></lower-bound>:<upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>OUT</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PNEBS</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>OUT</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PQCS</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>OUT</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PNEBS0</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>OUT</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PQCS0</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>OUT</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PCOEFN</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>OUT</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PFECT</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><lower-bound><literal-E><l>0</l></literal-E></lower-bound>:<upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>OUT</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PFECTI</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><lower-bound><literal-E><l>0</l></literal-E></lower-bound>:<upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>OUT</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PECT1</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>OUT</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PTPRDY</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>OUT</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PEDR</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><derived-T-spec>TYPE (<T-N><N><n>TYP_DDH</n></N></T-N>)</derived-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>INOUT</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>YDDDH</n></N></EN-N></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>INTEGER</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPIM</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>::<EN-decl-LT><EN-decl><EN-N><N><n>JLEV</n></N></EN-N></EN-decl>, <EN-decl><EN-N><N><n>JLON</n></N></EN-N></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>::<EN-decl-LT><EN-decl><EN-N><N><n>ZUSLE</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl>, <EN-decl><EN-N><N><n>ZLMECT</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl>, <EN-decl><EN-N><N><n>ZPHI3</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>::<EN-decl-LT><EN-decl><EN-N><N><n>ZPRODTH</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl>, <EN-decl><EN-N><N><n>ZPRDY</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>::<EN-decl-LT><EN-decl><EN-N><N><n>ZDIAG</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>::<EN-decl-LT><EN-decl><EN-N><N><n>ZDIFF</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl>, <EN-decl><EN-N><N><n>ZDISS</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>::<EN-decl-LT><EN-decl><EN-N><N><n>ZECT</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl>, <EN-decl><EN-N><N><n>ZECT1</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>::<EN-decl-LT><EN-decl><EN-N><N><n>ZDELPSG</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>::<EN-decl-LT><EN-decl><EN-N><N><n>ZDET</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>::<EN-decl-LT><EN-decl><EN-N><N><n>ZKCLS</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl>, <EN-decl><EN-N><N><n>ZECTCLS</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>::<EN-decl-LT><EN-decl><EN-N><N><n>ZTABHL</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><lower-bound><literal-E><l>0</l></literal-E></lower-bound>:<upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl>, <EN-decl><EN-N><N><n>ZTABFL</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl>, <EN-decl><EN-N><N><n>ZDIFFAR</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>::<EN-decl-LT><EN-decl><EN-N><N><n>ZFPRTH</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><lower-bound><literal-E><l>0</l></literal-E></lower-bound>:<upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl>, <EN-decl><EN-N><N><n>ZFPRDY</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><lower-bound><literal-E><l>0</l></literal-E></lower-bound>:<upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl>, <EN-decl><EN-N><N><n>ZFDISS</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><lower-bound><literal-E><l>0</l></literal-E></lower-bound>:<upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl>, <EN-decl><EN-N><N><n>ZFDIFF</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><lower-bound><literal-E><l>0</l></literal-E></lower-bound>:<upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl>, <EN-decl><EN-N><N><n>ZFCORTKE</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><lower-bound><literal-E><l>0</l></literal-E></lower-bound>:<upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>::<EN-decl-LT><EN-decl><EN-N><N><n>ZTPRTH</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl>, <EN-decl><EN-N><N><n>ZTDISS</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl>, <EN-decl><EN-N><N><n>ZTDIFF</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl>, <EN-decl><EN-N><N><n>ZTCORTKE</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl>, <EN-decl><EN-N><N><n>ZEDR</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>::<EN-decl-LT><EN-decl><EN-N><N><n>ZEPSQ</n></N></EN-N></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>LOGICAL</T-N></intrinsic-T-spec></_T-spec_>::<EN-decl-LT><EN-decl><EN-N><N><n>LLCONV</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>KLON</n></N></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPHOOK</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>::<EN-decl-LT><EN-decl><EN-N><N><n>ZHOOK_HANDLE</n></N></EN-N></EN-decl></EN-decl-LT></T-decl-stmt>
<include>#include &quot;<filename>acbl89.intfb.h</filename>&quot;</include>
<include>#include &quot;<filename>acturb.intfb.h</filename>&quot;</include>
<include>#include &quot;<filename>acevolet.intfb.h</filename>&quot;</include>
<include>#include &quot;<filename>hl2fl.intfb.h</filename>&quot;</include>
<include>#include &quot;<filename>fl2hl.intfb.h</filename>&quot;</include>
<include>#include &quot;<filename>wrscmr.intfb.h</filename>&quot;</include>
<include>#include &quot;<filename>aclender.intfb.h</filename>&quot;</include>
<if-stmt>IF (<condition-E><named-E><N><n>LHOOK</n></N></named-E></condition-E>) <action-stmt><call-stmt>CALL <procedure-designator><named-E><N><n>DR_HOOK</n></N></named-E></procedure-designator> (<arg-spec><arg><string-E><S>'ACTKE'</S></string-E></arg>, <arg><literal-E><l>0</l></literal-E></arg>, <arg><named-E><N><n>ZHOOK_HANDLE</n></N></named-E></arg></arg-spec>)</call-stmt></action-stmt></if-stmt>
<associate-construct><associate-stmt>ASSOCIATE (<associate-LT><associate><associate-N><n>RPRTH</n></associate-N>=&gt;<selector><named-E><N><n>YDML_PHY_MF</n></N><R-LT><component-R>%<ct>YRPHY0</ct></component-R><component-R>%<ct>RPRTH</ct></component-R></R-LT></named-E></selector></associate>, <associate><associate-N><n>NLEND</n></associate-N>=&gt;<selector><named-E><N><n>YDML_PHY_MF</n></N><R-LT><component-R>%<ct>YRPHY</ct></component-R><component-R>%<ct>NLEND</ct></component-R></R-LT></named-E></selector></associate>, <associate><associate-N><n>ECTMIN</n></associate-N>=&gt;<selector><named-E><N><n>YDML_PHY_MF</n></N><R-LT><component-R>%<ct>YRPHY0</ct></component-R><component-R>%<ct>ECTMIN</ct></component-R></R-LT></named-E></selector></associate>, <associate><associate-N><n>TSPHY</n></associate-N>=&gt;<selector><named-E><N><n>YDML_PHY_MF</n></N><R-LT><component-R>%<ct>YRPHY2</ct></component-R><component-R>%<ct>TSPHY</ct></component-R></R-LT></named-E></selector></associate>, <associate><associate-N><n>LECTFL</n></associate-N>=&gt;<selector><named-E><N><n>YDML_PHY_MF</n></N><R-LT><component-R>%<ct>YRPHY</ct></component-R><component-R>%<ct>LECTFL</ct></component-R></R-LT></named-E></selector></associate>, <associate><associate-N><n>RG</n></associate-N>=&gt;<selector><named-E><N><n>YDCST</n></N><R-LT><component-R>%<ct>RG</ct></component-R></R-LT></named-E></selector></associate>, <associate><associate-N><n>LFLEXDIA</n></associate-N>=&gt;<selector><named-E><N><n>YDLDDH</n></N><R-LT><component-R>%<ct>LFLEXDIA</ct></component-R></R-LT></named-E></selector></associate>, <associate><associate-N><n>LDDH_OMP</n></associate-N>=&gt;<selector><named-E><N><n>YDLDDH</n></N><R-LT><component-R>%<ct>LDDH_OMP</ct></component-R></R-LT></named-E></selector></associate></associate-LT>)</associate-stmt>
<a-stmt><E-1><named-E><N><n>ZEPSQ</n></N></named-E></E-1><a>=</a><E-2><literal-E><l>1.E-10</l><K-spec>_<N><n>JPRB</n></N></K-spec></literal-E></E-2></a-stmt>
<a-stmt><E-1><named-E><N><n>ZTDIFF</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-1><a>=</a><E-2><literal-E><l>0.0</l><K-spec>_<N><n>JPRB</n></N></K-spec></literal-E></E-2></a-stmt>
<a-stmt><E-1><named-E><N><n>PEDR</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-1><a>=</a><E-2><literal-E><l>0.0</l><K-spec>_<N><n>JPRB</n></N></K-spec></literal-E></E-2></a-stmt>
<a-stmt><E-1><named-E><N><n>ZTDISS</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-1><a>=</a><E-2><literal-E><l>0.0</l><K-spec>_<N><n>JPRB</n></N></K-spec></literal-E></E-2></a-stmt>
<a-stmt><E-1><named-E><N><n>ZTPRTH</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-1><a>=</a><E-2><literal-E><l>0.0</l><K-spec>_<N><n>JPRB</n></N></K-spec></literal-E></E-2></a-stmt>
<a-stmt><E-1><named-E><N><n>PTPRDY</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-1><a>=</a><E-2><literal-E><l>0.0</l><K-spec>_<N><n>JPRB</n></N></K-spec></literal-E></E-2></a-stmt>
<a-stmt><E-1><named-E><N><n>ZTCORTKE</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-1><a>=</a><E-2><literal-E><l>0.0</l><K-spec>_<N><n>JPRB</n></N></K-spec></literal-E></E-2></a-stmt>
<a-stmt><E-1><named-E><N><n>ZFDIFF</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-1><a>=</a><E-2><literal-E><l>0.0</l><K-spec>_<N><n>JPRB</n></N></K-spec></literal-E></E-2></a-stmt>
<a-stmt><E-1><named-E><N><n>ZFDISS</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-1><a>=</a><E-2><literal-E><l>0.0</l><K-spec>_<N><n>JPRB</n></N></K-spec></literal-E></E-2></a-stmt>
<a-stmt><E-1><named-E><N><n>ZFPRTH</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-1><a>=</a><E-2><literal-E><l>0.0</l><K-spec>_<N><n>JPRB</n></N></K-spec></literal-E></E-2></a-stmt>
<a-stmt><E-1><named-E><N><n>ZFPRDY</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-1><a>=</a><E-2><literal-E><l>0.0</l><K-spec>_<N><n>JPRB</n></N></K-spec></literal-E></E-2></a-stmt>
<a-stmt><E-1><named-E><N><n>ZFCORTKE</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-1><a>=</a><E-2><literal-E><l>0.0</l><K-spec>_<N><n>JPRB</n></N></K-spec></literal-E></E-2></a-stmt>
<a-stmt><E-1><named-E><N><n>ZDET</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-1><a>=</a><E-2><literal-E><l>0.0</l><K-spec>_<N><n>JPRB</n></N></K-spec></literal-E></E-2></a-stmt>
<a-stmt><E-1><named-E><N><n>ZDELPSG</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-1><a>=</a><E-2><literal-E><l>0.0</l><K-spec>_<N><n>JPRB</n></N></K-spec></literal-E></E-2></a-stmt>
<a-stmt><E-1><named-E><N><n>ZDIAG</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-1><a>=</a><E-2><literal-E><l>0.0</l><K-spec>_<N><n>JPRB</n></N></K-spec></literal-E></E-2></a-stmt>
<a-stmt><E-1><named-E><N><n>ZDIFFAR</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-1><a>=</a><E-2><literal-E><l>0.</l><K-spec>_<N><n>JPRB</n></N></K-spec></literal-E></E-2></a-stmt>
<if-construct><if-block><if-then-stmt>IF (<condition-E><named-E><N><n>LECTFL</n></N></named-E></condition-E>) THEN</if-then-stmt>
<call-stmt>CALL <procedure-designator><named-E><N><n>FL2HL</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>KIDIA</n></N></named-E></arg>, <arg><named-E><N><n>KFDIA</n></N></named-E></arg>, <arg><named-E><N><n>KLON</n></N></named-E></arg>, <arg><literal-E><l>1</l></literal-E></arg>, <arg><named-E><N><n>KLEV</n></N></named-E></arg>, <arg><named-E><N><n>PAPRS</n></N></named-E></arg>, <arg><named-E><N><n>PAPRSF</n></N></named-E></arg>, <arg><named-E><N><n>PECT</n></N></named-E></arg>, <arg><named-E><N><n>ZECT</n></N></named-E></arg>, <arg><literal-E><l>1</l></literal-E></arg></arg-spec>)</call-stmt>
<if-construct><if-block><if-then-stmt>IF (<condition-E><named-E><N><n>LMUSCLFA</n></N></named-E></condition-E>) THEN</if-then-stmt>
<a-stmt><E-1><named-E><N><n>ZTABFL</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-1><a>=</a><E-2><literal-E><l>0.</l><K-spec>_<N><n>JPRB</n></N></K-spec></literal-E></E-2></a-stmt>
<call-stmt>CALL <procedure-designator><named-E><N><n>HL2FL</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>KIDIA</n></N></named-E></arg>, <arg><named-E><N><n>KFDIA</n></N></named-E></arg>, <arg><named-E><N><n>KLON</n></N></named-E></arg>, <arg><literal-E><l>1</l></literal-E></arg>, <arg><named-E><N><n>KLEV</n></N></named-E></arg>, <arg><named-E><N><n>PAPRS</n></N></named-E></arg>, <arg><named-E><N><n>PAPRSF</n></N></named-E></arg>, <arg><named-E><N><n>ZECT</n></N></named-E></arg>, <arg><literal-E><l>1</l></literal-E></arg>, <arg><named-E><N><n>ZTABFL</n></N></named-E></arg></arg-spec>)</call-stmt>
<do-construct><do-stmt>DO <do-V><named-E><N><n>JLEV</n></N></named-E></do-V>=<lower-bound><literal-E><l>1</l></literal-E></lower-bound>, <upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></do-stmt>
<do-construct><do-stmt>DO <do-V><named-E><N><n>JLON</n></N></named-E></do-V>=<lower-bound><named-E><N><n>KIDIA</n></N></named-E></lower-bound>, <upper-bound><named-E><N><n>KFDIA</n></N></named-E></upper-bound></do-stmt>
<a-stmt><E-1><named-E><N><n>ZDIFFAR</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></E-1><a>=</a><E-2><op-E><parens-E>(<op-E><named-E><N><n>ZTABFL</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E><op><o>-</o></op><named-E><N><n>PECT</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></op-E>)</parens-E><op><o>/</o></op><named-E><N><n>TSPHY</n></N></named-E></op-E></E-2></a-stmt>
<end-do-stmt>ENDDO</end-do-stmt></do-construct>
<end-do-stmt>ENDDO</end-do-stmt></do-construct>
<end-if-stmt>ENDIF</end-if-stmt></if-block></if-construct>
</if-block><if-block><else-stmt>ELSE</else-stmt>
<do-construct><do-stmt>DO <do-V><named-E><N><n>JLEV</n></N></named-E></do-V>=<lower-bound><literal-E><l>1</l></literal-E></lower-bound>, <upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></do-stmt>
<do-construct><do-stmt>DO <do-V><named-E><N><n>JLON</n></N></named-E></do-V>=<lower-bound><named-E><N><n>KIDIA</n></N></named-E></lower-bound>, <upper-bound><named-E><N><n>KFDIA</n></N></named-E></upper-bound></do-stmt>
<a-stmt><E-1><named-E><N><n>ZECT</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></E-1><a>=</a><E-2><named-E><N><n>PECT</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></E-2></a-stmt>
<end-do-stmt>ENDDO</end-do-stmt></do-construct>
<end-do-stmt>ENDDO</end-do-stmt></do-construct>
<end-if-stmt>ENDIF</end-if-stmt></if-block></if-construct>
<do-construct><do-stmt>DO <do-V><named-E><N><n>JLEV</n></N></named-E></do-V>=<lower-bound><literal-E><l>1</l></literal-E></lower-bound>, <upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></do-stmt>
<do-construct><do-stmt>DO <do-V><named-E><N><n>JLON</n></N></named-E></do-V>=<lower-bound><named-E><N><n>KIDIA</n></N></named-E></lower-bound>, <upper-bound><named-E><N><n>KFDIA</n></N></named-E></upper-bound></do-stmt>
<a-stmt><E-1><named-E><N><n>ZUSLE</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></E-1><a>=</a><E-2><literal-E><l>0.0</l><K-spec>_<N><n>JPRB</n></N></K-spec></literal-E></E-2></a-stmt>
<a-stmt><E-1><named-E><N><n>ZLMECT</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></E-1><a>=</a><E-2><literal-E><l>0.0</l><K-spec>_<N><n>JPRB</n></N></K-spec></literal-E></E-2></a-stmt>
<a-stmt><E-1><named-E><N><n>ZPHI3</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></E-1><a>=</a><E-2><literal-E><l>0.0</l><K-spec>_<N><n>JPRB</n></N></K-spec></literal-E></E-2></a-stmt>
<end-do-stmt>ENDDO</end-do-stmt></do-construct>
<end-do-stmt>ENDDO</end-do-stmt></do-construct>
<do-construct><do-stmt>DO <do-V><named-E><N><n>JLON</n></N></named-E></do-V>=<lower-bound><named-E><N><n>KIDIA</n></N></named-E></lower-bound>, <upper-bound><named-E><N><n>KFDIA</n></N></named-E></upper-bound></do-stmt>
<a-stmt><E-1><named-E><N><n>ZECTCLS</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></E-1><a>=</a><E-2><literal-E><l>0.0</l><K-spec>_<N><n>JPRB</n></N></K-spec></literal-E></E-2></a-stmt>
<a-stmt><E-1><named-E><N><n>ZKCLS</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></E-1><a>=</a><E-2><literal-E><l>0.0</l><K-spec>_<N><n>JPRB</n></N></K-spec></literal-E></E-2></a-stmt>
<end-do-stmt>ENDDO</end-do-stmt></do-construct>
<do-construct><do-stmt>DO <do-V><named-E><N><n>JLEV</n></N></named-E></do-V>=<lower-bound><named-E><N><n>KTDIAT</n></N></named-E></lower-bound>, <upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></do-stmt>
<do-construct><do-stmt>DO <do-V><named-E><N><n>JLON</n></N></named-E></do-V>=<lower-bound><named-E><N><n>KIDIA</n></N></named-E></lower-bound>, <upper-bound><named-E><N><n>KFDIA</n></N></named-E></upper-bound></do-stmt>
<a-stmt><E-1><named-E><N><n>ZECT</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></E-1><a>=</a><E-2><named-E><N><n>MAX</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>ECTMIN</n></N></named-E></element>, <element><named-E><N><n>ZECT</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></element></element-LT>)</parens-R></R-LT></named-E></E-2></a-stmt>
<a-stmt><E-1><named-E><N><n>ZDELPSG</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></E-1><a>=</a><E-2><op-E><named-E><N><n>PDELP</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E><op><o>/</o></op><named-E><N><n>RG</n></N></named-E></op-E></E-2></a-stmt>
<end-do-stmt>ENDDO</end-do-stmt></do-construct>
<end-do-stmt>ENDDO</end-do-stmt></do-construct>
<if-construct><if-block><if-then-stmt>IF (<condition-E><op-E><named-E><N><n>NLEND</n></N></named-E><op><o>==</o></op><literal-E><l>0</l></literal-E></op-E></condition-E>) THEN</if-then-stmt>
<call-stmt>CALL <procedure-designator><named-E><N><n>ACBL89</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>YDCST</n></N></named-E></arg>, <arg><named-E><N><n>YDML_PHY_MF</n></N><R-LT><component-R>%<ct>YRPHY</ct></component-R></R-LT></named-E></arg>, <arg><named-E><N><n>YDML_PHY_MF</n></N><R-LT><component-R>%<ct>YRPHY0</ct></component-R></R-LT></named-E></arg>, <arg><named-E><N><n>KIDIA</n></N></named-E></arg>, <arg><named-E><N><n>KFDIA</n></N></named-E></arg>, <arg><named-E><N><n>KLON</n></N></named-E></arg>, <arg><named-E><N><n>KTDIAN</n></N></named-E></arg>, <arg><named-E><N><n>KLEV</n></N></named-E></arg>, <arg><named-E><N><n>PAPHI</n></N></named-E></arg>, <arg><named-E><N><n>PAPHIF</n></N></named-E></arg>, <arg><named-E><N><n>PAPRS</n></N></named-E></arg>, <arg><named-E><N><n>PAPRSF</n></N></named-E></arg>, <arg><named-E><N><n>PT</n></N></named-E></arg>, <arg><named-E><N><n>ZECT</n></N></named-E></arg>, <arg><named-E><N><n>PQ</n></N></named-E></arg>, <arg><named-E><N><n>PQICE</n></N></named-E></arg>, <arg><named-E><N><n>PQLI</n></N></named-E></arg>, <arg><named-E><N><n>PNLAB</n></N></named-E></arg>, <arg><named-E><N><n>PNLABCVP</n></N></named-E></arg>, <arg><named-E><N><n>PGZ0</n></N></named-E></arg>, <arg><named-E><N><n>PTS</n></N></named-E></arg>, <arg><named-E><N><n>ZUSLE</n></N></named-E></arg>, <arg><named-E><N><n>ZLMECT</n></N></named-E></arg>, <arg><named-E><N><n>ZPHI3</n></N></named-E></arg></arg-spec>)</call-stmt>
</if-block><if-block><else-if-stmt>ELSEIF (<condition-E><op-E><named-E><N><n>NLEND</n></N></named-E><op><o>&gt;</o></op><literal-E><l>0</l></literal-E></op-E></condition-E>) THEN</else-if-stmt>
<call-stmt>CALL <procedure-designator><named-E><N><n>ACLENDER</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>YDCST</n></N></named-E></arg>, <arg><named-E><N><n>YDML_PHY_MF</n></N><R-LT><component-R>%<ct>YRPHY</ct></component-R></R-LT></named-E></arg>, <arg><named-E><N><n>YDML_PHY_MF</n></N><R-LT><component-R>%<ct>YRPHY0</ct></component-R></R-LT></named-E></arg>, <arg><named-E><N><n>KIDIA</n></N></named-E></arg>, <arg><named-E><N><n>KFDIA</n></N></named-E></arg>, <arg><named-E><N><n>KLON</n></N></named-E></arg>, <arg><named-E><N><n>KTDIAN</n></N></named-E></arg>, <arg><named-E><N><n>KLEV</n></N></named-E></arg>, <arg><named-E><N><n>PAPHI</n></N></named-E></arg>, <arg><named-E><N><n>PAPHIF</n></N></named-E></arg>, <arg><named-E><N><n>PAPRS</n></N></named-E></arg>, <arg><named-E><N><n>PAPRSF</n></N></named-E></arg>, <arg><named-E><N><n>PT</n></N></named-E></arg>, <arg><named-E><N><n>PQ</n></N></named-E></arg>, <arg><named-E><N><n>PQICE</n></N></named-E></arg>, <arg><named-E><N><n>PQLI</n></N></named-E></arg>, <arg><named-E><N><n>PNLAB</n></N></named-E></arg>, <arg><named-E><N><n>PNLABCVP</n></N></named-E></arg>, <arg><named-E><N><n>PLSCPE</n></N></named-E></arg>, <arg><named-E><N><n>PU</n></N></named-E></arg>, <arg><named-E><N><n>PV</n></N></named-E></arg>, <arg><named-E><N><n>ZECT</n></N></named-E></arg>, <arg><named-E><N><n>PGZ0</n></N></named-E></arg>, <arg><named-E><N><n>ZUSLE</n></N></named-E></arg>, <arg><named-E><N><n>ZLMECT</n></N></named-E></arg>, <arg><named-E><N><n>ZPHI3</n></N></named-E></arg></arg-spec>)</call-stmt>
<end-if-stmt>ENDIF</end-if-stmt></if-block></if-construct>
<call-stmt>CALL <procedure-designator><named-E><N><n>ACTURB</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>YDCST</n></N></named-E></arg>, <arg><named-E><N><n>YDML_PHY_MF</n></N><R-LT><component-R>%<ct>YRPHY</ct></component-R></R-LT></named-E></arg>, <arg><named-E><N><n>YDML_PHY_MF</n></N><R-LT><component-R>%<ct>YRPHY0</ct></component-R></R-LT></named-E></arg>, <arg><named-E><N><n>KIDIA</n></N></named-E></arg>, <arg><named-E><N><n>KFDIA</n></N></named-E></arg>, <arg><named-E><N><n>KLON</n></N></named-E></arg>, <arg><named-E><N><n>KTDIAT</n></N></named-E></arg>, <arg><named-E><N><n>KTDIAN</n></N></named-E></arg>, <arg><named-E><N><n>KLEV</n></N></named-E></arg>, <arg><named-E><N><n>PAPHI</n></N></named-E></arg>, <arg><named-E><N><n>PAPHIF</n></N></named-E></arg>, <arg><named-E><N><n>PAPRS</n></N></named-E></arg>, <arg><named-E><N><n>PAPRSF</n></N></named-E></arg>, <arg><named-E><N><n>PR</n></N></named-E></arg>, <arg><named-E><N><n>PT</n></N></named-E></arg>, <arg><named-E><N><n>PU</n></N></named-E></arg>, <arg><named-E><N><n>PV</n></N></named-E></arg>, <arg><named-E><N><n>ZECT</n></N></named-E></arg>, <arg><named-E><N><n>PQ</n></N></named-E></arg>, <arg><named-E><N><n>LLCONV</n></N></named-E></arg>, <arg><named-E><N><n>PLSCPE</n></N></named-E></arg>, <arg><named-E><N><n>ZLMECT</n></N></named-E></arg>, <arg><named-E><N><n>ZPHI3</n></N></named-E></arg>, <arg><named-E><N><n>PCD</n></N></named-E></arg>, <arg><named-E><N><n>PCH</n></N></named-E></arg>, <arg><named-E><N><n>PGZ0</n></N></named-E></arg>, <arg><named-E><N><n>PTS</n></N></named-E></arg>, <arg><named-E><N><n>PQS</n></N></named-E></arg>, <arg><named-E><N><n>PQICE</n></N></named-E></arg>, <arg><named-E><N><n>PQLI</n></N></named-E></arg>, <arg><named-E><N><n>PKTROV</n></N></named-E></arg>, <arg><named-E><N><n>PKQROV</n></N></named-E></arg>, <arg><named-E><N><n>PKQLROV</n></N></named-E></arg>, <arg><named-E><N><n>PKUROV</n></N></named-E></arg>, <arg><named-E><N><n>PNBVNO</n></N></named-E></arg>, <arg><named-E><N><n>ZPRODTH</n></N></named-E></arg>, <arg><named-E><N><n>PNEBS</n></N></named-E></arg>, <arg><named-E><N><n>PQCS</n></N></named-E></arg>, <arg><named-E><N><n>PCOEFN</n></N></named-E></arg>, <arg><named-E><N><n>ZKCLS</n></N></named-E></arg>, <arg><named-E><N><n>ZECTCLS</n></N></named-E></arg></arg-spec>)</call-stmt>
<a-stmt><E-1><named-E><N><n>PNEBS0</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-1><a>=</a><E-2><named-E><N><n>PNEBS</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-2></a-stmt>
<a-stmt><E-1><named-E><N><n>PQCS0</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-1><a>=</a><E-2><named-E><N><n>PQCS</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-2></a-stmt>
<a-stmt><E-1><named-E><N><n>PXTROV</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-1><a>=</a><E-2><literal-E><l>1.0</l><K-spec>_<N><n>JPRB</n></N></K-spec></literal-E></E-2></a-stmt>
<a-stmt><E-1><named-E><N><n>PXUROV</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-1><a>=</a><E-2><literal-E><l>1.0</l><K-spec>_<N><n>JPRB</n></N></K-spec></literal-E></E-2></a-stmt>
<do-construct><do-stmt>DO <do-V><named-E><N><n>JLEV</n></N></named-E></do-V>=<lower-bound><named-E><N><n>KTDIAT</n></N></named-E></lower-bound>, <upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></do-stmt>
<do-construct><do-stmt>DO <do-V><named-E><N><n>JLON</n></N></named-E></do-V>=<lower-bound><named-E><N><n>KIDIA</n></N></named-E></lower-bound>, <upper-bound><named-E><N><n>KFDIA</n></N></named-E></upper-bound></do-stmt>
<a-stmt><E-1><named-E><N><n>ZPRODTH</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></E-1><a>=</a><E-2><op-E><named-E><N><n>ZPRODTH</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E><op><o>+</o></op><op-E><named-E><N><n>RPRTH</n></N></named-E><op><o>*</o></op><named-E><N><n>MAX</n></N> <R-LT><parens-R>(<element-LT><element><literal-E><l>0.</l><K-spec>_<N><n>JPRB</n></N></K-spec></literal-E></element>, <element><named-E><N><n>PPRODTH</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></element></element-LT>)</parens-R></R-LT></named-E></op-E></op-E></E-2></a-stmt>
<end-do-stmt>ENDDO</end-do-stmt></do-construct>
<end-do-stmt>ENDDO</end-do-stmt></do-construct>
<call-stmt>CALL <procedure-designator><named-E><N><n>ACEVOLET</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>YDCST</n></N></named-E></arg>, <arg><named-E><N><n>YDML_PHY_MF</n></N></named-E></arg>, <arg><named-E><N><n>KIDIA</n></N></named-E></arg>, <arg><named-E><N><n>KFDIA</n></N></named-E></arg>, <arg><named-E><N><n>KLON</n></N></named-E></arg>, <arg><named-E><N><n>KTDIAT</n></N></named-E></arg>, <arg><named-E><N><n>KTDIAN</n></N></named-E></arg>, <arg><named-E><N><n>KLEV</n></N></named-E></arg>, <arg><named-E><N><n>PAPHI</n></N></named-E></arg>, <arg><named-E><N><n>PAPHIF</n></N></named-E></arg>, <arg><named-E><N><n>PAPRS</n></N></named-E></arg>, <arg><named-E><N><n>PAPRSF</n></N></named-E></arg>, <arg><named-E><N><n>PDELP</n></N></named-E></arg>, <arg><named-E><N><n>ZECT</n></N></named-E></arg>, <arg><named-E><N><n>PKUROV</n></N></named-E></arg>, <arg><named-E><N><n>PR</n></N></named-E></arg>, <arg><named-E><N><n>PT</n></N></named-E></arg>, <arg><named-E><N><n>PU</n></N></named-E></arg>, <arg><named-E><N><n>PV</n></N></named-E></arg>, <arg><named-E><N><n>ZUSLE</n></N></named-E></arg>, <arg><named-E><N><n>ZPRODTH</n></N></named-E></arg>, <arg><named-E><N><n>ZKCLS</n></N></named-E></arg>, <arg><named-E><N><n>ZECTCLS</n></N></named-E></arg>, <arg><named-E><N><n>ZECT1</n></N></named-E></arg>, <arg><named-E><N><n>ZPRDY</n></N></named-E></arg>, <arg><named-E><N><n>ZDIFF</n></N></named-E></arg>, <arg><named-E><N><n>ZDISS</n></N></named-E></arg></arg-spec>)</call-stmt>
<a-stmt><E-1><named-E><N><n>PECT1</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-1><a>=</a><E-2><named-E><N><n>ECTMIN</n></N></named-E></E-2></a-stmt>
<do-construct><do-stmt>DO <do-V><named-E><N><n>JLEV</n></N></named-E></do-V>=<lower-bound><named-E><N><n>KTDIAT</n></N></named-E></lower-bound>, <upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></do-stmt>
<do-construct><do-stmt>DO <do-V><named-E><N><n>JLON</n></N></named-E></do-V>=<lower-bound><named-E><N><n>KIDIA</n></N></named-E></lower-bound>, <upper-bound><named-E><N><n>KFDIA</n></N></named-E></upper-bound></do-stmt>
<a-stmt><E-1><named-E><N><n>ZEDR</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></E-1><a>=</a><E-2><op-E><named-E><N><n>MIN</n></N> <R-LT><parens-R>(<element-LT><element><literal-E><l>100.</l><K-spec>_<N><n>JPRB</n></N></K-spec></literal-E></element>, <element><op-E><named-E><N><n>ZUSLE</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E><op><o>*</o></op><named-E><N><n>RG</n></N></named-E></op-E></element></element-LT>)</parens-R></R-LT></named-E><op><o>*</o></op><op-E><parens-E>(<op-E><literal-E><l>0.5</l><K-spec>_<N><n>JPRB</n></N></K-spec></literal-E><op><o>*</o></op><parens-E>(<op-E><named-E><N><n>ZECT1</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E><op><o>+</o></op><named-E><N><n>PECT</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></op-E>)</parens-E></op-E>)</parens-E><op><o>**</o></op><literal-E><l>1.5</l></literal-E></op-E></op-E></E-2></a-stmt>
<end-do-stmt>ENDDO</end-do-stmt></do-construct>
<end-do-stmt>ENDDO</end-do-stmt></do-construct>
<if-construct><if-block><if-then-stmt>IF (<condition-E><named-E><N><n>LECTFL</n></N></named-E></condition-E>) THEN</if-then-stmt>
<call-stmt>CALL <procedure-designator><named-E><N><n>HL2FL</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>KIDIA</n></N></named-E></arg>, <arg><named-E><N><n>KFDIA</n></N></named-E></arg>, <arg><named-E><N><n>KLON</n></N></named-E></arg>, <arg><literal-E><l>1</l></literal-E></arg>, <arg><named-E><N><n>KLEV</n></N></named-E></arg>, <arg><named-E><N><n>PAPRS</n></N></named-E></arg>, <arg><named-E><N><n>PAPRSF</n></N></named-E></arg>, <arg><named-E><N><n>ZECT1</n></N></named-E></arg>, <arg><literal-E><l>1</l></literal-E></arg>, <arg><named-E><N><n>PECT1</n></N></named-E></arg></arg-spec>)</call-stmt>
<do-construct><do-stmt>DO <do-V><named-E><N><n>JLEV</n></N></named-E></do-V>=<lower-bound><named-E><N><n>KTDIAT</n></N></named-E></lower-bound>, <upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></do-stmt>
<do-construct><do-stmt>DO <do-V><named-E><N><n>JLON</n></N></named-E></do-V>=<lower-bound><named-E><N><n>KIDIA</n></N></named-E></lower-bound>, <upper-bound><named-E><N><n>KFDIA</n></N></named-E></upper-bound></do-stmt>
<a-stmt><E-1><named-E><N><n>ZDET</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></E-1><a>=</a><E-2><op-E><parens-E>(<op-E><named-E><N><n>PECT1</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E><op><o>-</o></op><named-E><N><n>PECT</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></op-E>)</parens-E><op><o>/</o></op><named-E><N><n>TSPHY</n></N></named-E></op-E></E-2></a-stmt>
<end-do-stmt>ENDDO</end-do-stmt></do-construct>
<end-do-stmt>ENDDO</end-do-stmt></do-construct>
<call-stmt>CALL <procedure-designator><named-E><N><n>HL2FL</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>KIDIA</n></N></named-E></arg>, <arg><named-E><N><n>KFDIA</n></N></named-E></arg>, <arg><named-E><N><n>KLON</n></N></named-E></arg>, <arg><literal-E><l>1</l></literal-E></arg>, <arg><named-E><N><n>KLEV</n></N></named-E></arg>, <arg><named-E><N><n>PAPRS</n></N></named-E></arg>, <arg><named-E><N><n>PAPRSF</n></N></named-E></arg>, <arg><named-E><N><n>ZPRDY</n></N></named-E></arg>, <arg><literal-E><l>1</l></literal-E></arg>, <arg><named-E><N><n>PTPRDY</n></N></named-E></arg></arg-spec>)</call-stmt>
<call-stmt>CALL <procedure-designator><named-E><N><n>HL2FL</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>KIDIA</n></N></named-E></arg>, <arg><named-E><N><n>KFDIA</n></N></named-E></arg>, <arg><named-E><N><n>KLON</n></N></named-E></arg>, <arg><literal-E><l>1</l></literal-E></arg>, <arg><named-E><N><n>KLEV</n></N></named-E></arg>, <arg><named-E><N><n>PAPRS</n></N></named-E></arg>, <arg><named-E><N><n>PAPRSF</n></N></named-E></arg>, <arg><named-E><N><n>ZEDR</n></N></named-E></arg>, <arg><literal-E><l>1</l></literal-E></arg>, <arg><named-E><N><n>PEDR</n></N></named-E></arg></arg-spec>)</call-stmt>
<if-construct><if-block><if-then-stmt>IF (<condition-E><op-E><named-E><N><n>LMUSCLFA</n></N></named-E><op><o>.OR.</o></op><named-E><N><n>LFLEXDIA</n></N></named-E></op-E></condition-E>) THEN</if-then-stmt>
<call-stmt>CALL <procedure-designator><named-E><N><n>HL2FL</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>KIDIA</n></N></named-E></arg>, <arg><named-E><N><n>KFDIA</n></N></named-E></arg>, <arg><named-E><N><n>KLON</n></N></named-E></arg>, <arg><literal-E><l>1</l></literal-E></arg>, <arg><named-E><N><n>KLEV</n></N></named-E></arg>, <arg><named-E><N><n>PAPRS</n></N></named-E></arg>, <arg><named-E><N><n>PAPRSF</n></N></named-E></arg>, <arg><named-E><N><n>ZDISS</n></N></named-E></arg>, <arg><literal-E><l>1</l></literal-E></arg>, <arg><named-E><N><n>ZTDISS</n></N></named-E></arg></arg-spec>)</call-stmt>
<call-stmt>CALL <procedure-designator><named-E><N><n>HL2FL</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>KIDIA</n></N></named-E></arg>, <arg><named-E><N><n>KFDIA</n></N></named-E></arg>, <arg><named-E><N><n>KLON</n></N></named-E></arg>, <arg><literal-E><l>1</l></literal-E></arg>, <arg><named-E><N><n>KLEV</n></N></named-E></arg>, <arg><named-E><N><n>PAPRS</n></N></named-E></arg>, <arg><named-E><N><n>PAPRSF</n></N></named-E></arg>, <arg><named-E><N><n>ZDIFF</n></N></named-E></arg>, <arg><literal-E><l>1</l></literal-E></arg>, <arg><named-E><N><n>ZTDIFF</n></N></named-E></arg></arg-spec>)</call-stmt>
<call-stmt>CALL <procedure-designator><named-E><N><n>HL2FL</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>KIDIA</n></N></named-E></arg>, <arg><named-E><N><n>KFDIA</n></N></named-E></arg>, <arg><named-E><N><n>KLON</n></N></named-E></arg>, <arg><literal-E><l>1</l></literal-E></arg>, <arg><named-E><N><n>KLEV</n></N></named-E></arg>, <arg><named-E><N><n>PAPRS</n></N></named-E></arg>, <arg><named-E><N><n>PAPRSF</n></N></named-E></arg>, <arg><named-E><N><n>ZPRDY</n></N></named-E></arg>, <arg><literal-E><l>1</l></literal-E></arg>, <arg><named-E><N><n>PTPRDY</n></N></named-E></arg></arg-spec>)</call-stmt>
<call-stmt>CALL <procedure-designator><named-E><N><n>HL2FL</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>KIDIA</n></N></named-E></arg>, <arg><named-E><N><n>KFDIA</n></N></named-E></arg>, <arg><named-E><N><n>KLON</n></N></named-E></arg>, <arg><literal-E><l>1</l></literal-E></arg>, <arg><named-E><N><n>KLEV</n></N></named-E></arg>, <arg><named-E><N><n>PAPRS</n></N></named-E></arg>, <arg><named-E><N><n>PAPRSF</n></N></named-E></arg>, <arg><named-E><N><n>ZPRODTH</n></N></named-E></arg>, <arg><literal-E><l>1</l></literal-E></arg>, <arg><named-E><N><n>ZTPRTH</n></N></named-E></arg></arg-spec>)</call-stmt>
<call-stmt>CALL <procedure-designator><named-E><N><n>HL2FL</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>KIDIA</n></N></named-E></arg>, <arg><named-E><N><n>KFDIA</n></N></named-E></arg>, <arg><named-E><N><n>KLON</n></N></named-E></arg>, <arg><literal-E><l>1</l></literal-E></arg>, <arg><named-E><N><n>KLEV</n></N></named-E></arg>, <arg><named-E><N><n>PAPRS</n></N></named-E></arg>, <arg><named-E><N><n>PAPRSF</n></N></named-E></arg>, <arg><named-E><N><n>ZDISS</n></N></named-E></arg>, <arg><literal-E><l>1</l></literal-E></arg>, <arg><named-E><N><n>ZTDISS</n></N></named-E></arg></arg-spec>)</call-stmt>
<do-construct><do-stmt>DO <do-V><named-E><N><n>JLEV</n></N></named-E></do-V>=<lower-bound><named-E><N><n>KTDIAT</n></N></named-E></lower-bound>, <upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></do-stmt>
<do-construct><do-stmt>DO <do-V><named-E><N><n>JLON</n></N></named-E></do-V>=<lower-bound><named-E><N><n>KIDIA</n></N></named-E></lower-bound>, <upper-bound><named-E><N><n>KFDIA</n></N></named-E></upper-bound></do-stmt>
<a-stmt><E-1><named-E><N><n>ZTCORTKE</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></E-1><a>=</a><E-2><op-E><named-E><N><n>ZDET</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E><op><o>-</o></op><op-E><named-E><N><n>ZTPRTH</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E><op><o>-</o></op><op-E><named-E><N><n>PTPRDY</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E><op><o>-</o></op><op-E><named-E><N><n>ZTDIFF</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E><op><o>-</o></op><named-E><N><n>ZTDISS</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></op-E></op-E></op-E></op-E></E-2></a-stmt>
<a-stmt><E-1><named-E><N><n>ZTDIFF</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></E-1><a>=</a><E-2><op-E><named-E><N><n>ZTDIFF</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E><op><o>+</o></op><named-E><N><n>ZTCORTKE</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></op-E></E-2></a-stmt>
<end-do-stmt>ENDDO</end-do-stmt></do-construct>
<end-do-stmt>ENDDO</end-do-stmt></do-construct>
<if-stmt>IF (<condition-E><named-E><N><n>LMUSCLFA</n></N></named-E></condition-E>) <action-stmt><call-stmt>CALL <procedure-designator><named-E><N><n>WRSCMR</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>NMUSCLFA</n></N></named-E></arg>,<arg><string-E><S>'PECT1'</S></string-E></arg>, <arg><named-E><N><n>PECT1</n></N></named-E></arg>, <arg><named-E><N><n>KLON</n></N></named-E></arg>, <arg><named-E><N><n>KLEV</n></N></named-E></arg></arg-spec>)</call-stmt></action-stmt></if-stmt>
<if-stmt>IF (<condition-E><named-E><N><n>LMUSCLFA</n></N></named-E></condition-E>) <action-stmt><call-stmt>CALL <procedure-designator><named-E><N><n>WRSCMR</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>NMUSCLFA</n></N></named-E></arg>,<arg><string-E><S>'ZDECT'</S></string-E></arg>, <arg><named-E><N><n>ZDET</n></N></named-E></arg>, <arg><named-E><N><n>KLON</n></N></named-E></arg>, <arg><named-E><N><n>KLEV</n></N></named-E></arg></arg-spec>)</call-stmt></action-stmt></if-stmt>
<if-stmt>IF (<condition-E><named-E><N><n>LMUSCLFA</n></N></named-E></condition-E>) <action-stmt><call-stmt>CALL <procedure-designator><named-E><N><n>WRSCMR</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>NMUSCLFA</n></N></named-E></arg>,<arg><string-E><S>'ZDIFF'</S></string-E></arg>, <arg><named-E><N><n>ZTDIFF</n></N></named-E></arg>, <arg><named-E><N><n>KLON</n></N></named-E></arg>, <arg><named-E><N><n>KLEV</n></N></named-E></arg></arg-spec>)</call-stmt></action-stmt></if-stmt>
<if-stmt>IF (<condition-E><named-E><N><n>LMUSCLFA</n></N></named-E></condition-E>) <action-stmt><call-stmt>CALL <procedure-designator><named-E><N><n>WRSCMR</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>NMUSCLFA</n></N></named-E></arg>,<arg><string-E><S>'ZDIFFAR'</S></string-E></arg>, <arg><named-E><N><n>ZDIFFAR</n></N></named-E></arg>, <arg><named-E><N><n>KLON</n></N></named-E></arg>, <arg><named-E><N><n>KLEV</n></N></named-E></arg></arg-spec>)</call-stmt></action-stmt></if-stmt>
<if-stmt>IF (<condition-E><named-E><N><n>LMUSCLFA</n></N></named-E></condition-E>) <action-stmt><call-stmt>CALL <procedure-designator><named-E><N><n>WRSCMR</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>NMUSCLFA</n></N></named-E></arg>,<arg><string-E><S>'ZPRDY'</S></string-E></arg>, <arg><named-E><N><n>PTPRDY</n></N></named-E></arg>, <arg><named-E><N><n>KLON</n></N></named-E></arg>, <arg><named-E><N><n>KLEV</n></N></named-E></arg></arg-spec>)</call-stmt></action-stmt></if-stmt>
<if-stmt>IF (<condition-E><named-E><N><n>LMUSCLFA</n></N></named-E></condition-E>) <action-stmt><call-stmt>CALL <procedure-designator><named-E><N><n>WRSCMR</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>NMUSCLFA</n></N></named-E></arg>,<arg><string-E><S>'ZPRTH'</S></string-E></arg>, <arg><named-E><N><n>ZTPRTH</n></N></named-E></arg>, <arg><named-E><N><n>KLON</n></N></named-E></arg>, <arg><named-E><N><n>KLEV</n></N></named-E></arg></arg-spec>)</call-stmt></action-stmt></if-stmt>
<if-stmt>IF (<condition-E><named-E><N><n>LMUSCLFA</n></N></named-E></condition-E>) <action-stmt><call-stmt>CALL <procedure-designator><named-E><N><n>WRSCMR</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>NMUSCLFA</n></N></named-E></arg>,<arg><string-E><S>'ZDISS'</S></string-E></arg>, <arg><named-E><N><n>ZTDISS</n></N></named-E></arg>, <arg><named-E><N><n>KLON</n></N></named-E></arg>, <arg><named-E><N><n>KLEV</n></N></named-E></arg></arg-spec>)</call-stmt></action-stmt></if-stmt>
<if-construct><if-block><if-then-stmt>IF (<condition-E><named-E><N><n>LFLEXDIA</n></N></named-E></condition-E>) THEN</if-then-stmt>
<a-stmt><E-1><named-E><N><n>ZTABHL</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-1><a>=</a><E-2><literal-E><l>0.</l><K-spec>_<N><n>JPRB</n></N></K-spec></literal-E></E-2></a-stmt>
<do-construct><do-stmt>DO <do-V><named-E><N><n>JLEV</n></N></named-E></do-V>=<lower-bound><named-E><N><n>KTDIAT</n></N></named-E></lower-bound>, <upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></do-stmt>
<do-construct><do-stmt>DO <do-V><named-E><N><n>JLON</n></N></named-E></do-V>=<lower-bound><named-E><N><n>KIDIA</n></N></named-E></lower-bound>, <upper-bound><named-E><N><n>KFDIA</n></N></named-E></upper-bound></do-stmt>
<a-stmt><E-1><named-E><N><n>ZTPRTH</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></E-1><a>=</a><E-2><op-E><named-E><N><n>ZTPRTH</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E><op><o>*</o></op><named-E><N><n>ZDELPSG</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></op-E></E-2></a-stmt>
<a-stmt><E-1><named-E><N><n>ZDIAG</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></E-1><a>=</a><E-2><op-E><named-E><N><n>PTPRDY</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E><op><o>*</o></op><named-E><N><n>ZDELPSG</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></op-E></E-2></a-stmt>
<a-stmt><E-1><named-E><N><n>ZTDISS</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></E-1><a>=</a><E-2><op-E><named-E><N><n>ZTDISS</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E><op><o>*</o></op><named-E><N><n>ZDELPSG</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></op-E></E-2></a-stmt>
<a-stmt><E-1><named-E><N><n>ZTDIFF</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></E-1><a>=</a><E-2><op-E><named-E><N><n>ZTDIFF</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E><op><o>*</o></op><named-E><N><n>ZDELPSG</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></op-E></E-2></a-stmt>
<end-do-stmt>ENDDO</end-do-stmt></do-construct>
<end-do-stmt>ENDDO</end-do-stmt></do-construct>
<if-construct><if-block><if-then-stmt>IF (<condition-E><named-E><N><n>LDDH_OMP</n></N></named-E></condition-E>) THEN</if-then-stmt>
<call-stmt>CALL <procedure-designator><named-E><N><n>NEW_ADD_FIELD_3D</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>YDMDDH</n></N></named-E></arg>, <arg><named-E><N><n>ZTPRTH</n></N></named-E></arg>,<arg><string-E><S>'TKEPRTH'</S></string-E></arg>, <arg><named-E><N><n>YDDDH</n></N></named-E></arg></arg-spec>)</call-stmt>
<call-stmt>CALL <procedure-designator><named-E><N><n>NEW_ADD_FIELD_3D</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>YDMDDH</n></N></named-E></arg>, <arg><named-E><N><n>ZDIAG</n></N></named-E></arg>,<arg><string-E><S>'TKEPRDY'</S></string-E></arg>, <arg><named-E><N><n>YDDDH</n></N></named-E></arg></arg-spec>)</call-stmt>
<call-stmt>CALL <procedure-designator><named-E><N><n>NEW_ADD_FIELD_3D</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>YDMDDH</n></N></named-E></arg>, <arg><named-E><N><n>ZTDISS</n></N></named-E></arg>,<arg><string-E><S>'TKEDISS'</S></string-E></arg>, <arg><named-E><N><n>YDDDH</n></N></named-E></arg></arg-spec>)</call-stmt>
<call-stmt>CALL <procedure-designator><named-E><N><n>NEW_ADD_FIELD_3D</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>YDMDDH</n></N></named-E></arg>, <arg><named-E><N><n>ZTDIFF</n></N></named-E></arg>,<arg><string-E><S>'TKEDIFF'</S></string-E></arg>, <arg><named-E><N><n>YDDDH</n></N></named-E></arg></arg-spec>)</call-stmt>
</if-block><if-block><else-stmt>ELSE</else-stmt>
<call-stmt>CALL <procedure-designator><named-E><N><n>ADD_FIELD_3D</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>YDLDDH</n></N></named-E></arg>, <arg><named-E><N><n>ZTPRTH</n></N></named-E></arg>,<arg><string-E><S>'TKEPRTH'</S></string-E></arg>,<arg><string-E><S>'T'</S></string-E></arg>,<arg><string-E><S>'ARP'</S></string-E></arg>,<arg><literal-E>.TRUE.</literal-E></arg>,<arg><literal-E>.TRUE.</literal-E></arg></arg-spec>)</call-stmt>
<call-stmt>CALL <procedure-designator><named-E><N><n>ADD_FIELD_3D</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>YDLDDH</n></N></named-E></arg>, <arg><named-E><N><n>ZDIAG</n></N></named-E></arg>,<arg><string-E><S>'TKEPRDY'</S></string-E></arg>,<arg><string-E><S>'T'</S></string-E></arg>,<arg><string-E><S>'ARP'</S></string-E></arg>,<arg><literal-E>.TRUE.</literal-E></arg>,<arg><literal-E>.TRUE.</literal-E></arg></arg-spec>)</call-stmt>
<call-stmt>CALL <procedure-designator><named-E><N><n>ADD_FIELD_3D</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>YDLDDH</n></N></named-E></arg>, <arg><named-E><N><n>ZTDISS</n></N></named-E></arg>,<arg><string-E><S>'TKEDISS'</S></string-E></arg>,<arg><string-E><S>'T'</S></string-E></arg>,<arg><string-E><S>'ARP'</S></string-E></arg>,<arg><literal-E>.TRUE.</literal-E></arg>,<arg><literal-E>.TRUE.</literal-E></arg></arg-spec>)</call-stmt>
<call-stmt>CALL <procedure-designator><named-E><N><n>ADD_FIELD_3D</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>YDLDDH</n></N></named-E></arg>, <arg><named-E><N><n>ZTDIFF</n></N></named-E></arg>,<arg><string-E><S>'TKEDIFF'</S></string-E></arg>,<arg><string-E><S>'T'</S></string-E></arg>,<arg><string-E><S>'ARP'</S></string-E></arg>,<arg><literal-E>.TRUE.</literal-E></arg>,<arg><literal-E>.TRUE.</literal-E></arg></arg-spec>)</call-stmt>
<end-if-stmt>ENDIF</end-if-stmt></if-block></if-construct>
<end-if-stmt>ENDIF</end-if-stmt></if-block></if-construct>
<end-if-stmt>ENDIF</end-if-stmt></if-block></if-construct>
</if-block><if-block><else-stmt>ELSE</else-stmt>
<do-construct><do-stmt>DO <do-V><named-E><N><n>JLEV</n></N></named-E></do-V>=<lower-bound><named-E><N><n>KTDIAT</n></N></named-E></lower-bound>, <upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></do-stmt>
<do-construct><do-stmt>DO <do-V><named-E><N><n>JLON</n></N></named-E></do-V>=<lower-bound><named-E><N><n>KIDIA</n></N></named-E></lower-bound>, <upper-bound><named-E><N><n>KFDIA</n></N></named-E></upper-bound></do-stmt>
<a-stmt><E-1><named-E><N><n>ZDET</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></E-1><a>=</a><E-2><op-E><parens-E>(<op-E><named-E><N><n>ZECT1</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E><op><o>-</o></op><named-E><N><n>PECT</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></op-E>)</parens-E><op><o>/</o></op><named-E><N><n>TSPHY</n></N></named-E></op-E></E-2></a-stmt>
<a-stmt><E-1><named-E><N><n>PECT1</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></E-1><a>=</a><E-2><named-E><N><n>ZECT1</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></E-2></a-stmt>
<a-stmt><E-1><named-E><N><n>PTPRDY</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></E-1><a>=</a><E-2><named-E><N><n>ZPRDY</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></E-2></a-stmt>
<a-stmt><E-1><named-E><N><n>PEDR</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></E-1><a>=</a><E-2><named-E><N><n>ZEDR</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></E-2></a-stmt>
<end-do-stmt>ENDDO</end-do-stmt></do-construct>
<end-do-stmt>ENDDO</end-do-stmt></do-construct>
<if-construct><if-block><if-then-stmt>IF (<condition-E><named-E><N><n>LMUSCLFA</n></N></named-E></condition-E>) THEN</if-then-stmt>
<a-stmt><E-1><named-E><N><n>ZTABHL</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-1><a>=</a><E-2><literal-E><l>0.</l><K-spec>_<N><n>JPRB</n></N></K-spec></literal-E></E-2></a-stmt>
<a-stmt><E-1><named-E><N><n>ZTABHL</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>, <section-subscript><lower-bound><literal-E><l>1</l></literal-E></lower-bound>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-1><a>=</a><E-2><named-E><N><n>PECT1</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-2></a-stmt>
<call-stmt>CALL <procedure-designator><named-E><N><n>WRSCMR</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>NMUSCLFA</n></N></named-E></arg>,<arg><string-E><S>'PECT1'</S></string-E></arg>, <arg><named-E><N><n>ZTABHL</n></N></named-E></arg>, <arg><named-E><N><n>KLON</n></N></named-E></arg>, <arg><op-E><named-E><N><n>KLEV</n></N></named-E><op><o>+</o></op><literal-E><l>1</l></literal-E></op-E></arg></arg-spec>)</call-stmt>
<a-stmt><E-1><named-E><N><n>ZTABHL</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>, <section-subscript><lower-bound><literal-E><l>1</l></literal-E></lower-bound>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-1><a>=</a><E-2><named-E><N><n>ZDET</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-2></a-stmt>
<call-stmt>CALL <procedure-designator><named-E><N><n>WRSCMR</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>NMUSCLFA</n></N></named-E></arg>,<arg><string-E><S>'ZDECT'</S></string-E></arg>, <arg><named-E><N><n>ZTABHL</n></N></named-E></arg>, <arg><named-E><N><n>KLON</n></N></named-E></arg>, <arg><op-E><named-E><N><n>KLEV</n></N></named-E><op><o>+</o></op><literal-E><l>1</l></literal-E></op-E></arg></arg-spec>)</call-stmt>
<a-stmt><E-1><named-E><N><n>ZTABHL</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>, <section-subscript><lower-bound><literal-E><l>1</l></literal-E></lower-bound>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-1><a>=</a><E-2><named-E><N><n>ZPRDY</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-2></a-stmt>
<call-stmt>CALL <procedure-designator><named-E><N><n>WRSCMR</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>NMUSCLFA</n></N></named-E></arg>,<arg><string-E><S>'ZPRDY'</S></string-E></arg>, <arg><named-E><N><n>ZTABHL</n></N></named-E></arg>, <arg><named-E><N><n>KLON</n></N></named-E></arg>, <arg><op-E><named-E><N><n>KLEV</n></N></named-E><op><o>+</o></op><literal-E><l>1</l></literal-E></op-E></arg></arg-spec>)</call-stmt>
<a-stmt><E-1><named-E><N><n>ZTABHL</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>, <section-subscript><lower-bound><literal-E><l>1</l></literal-E></lower-bound>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-1><a>=</a><E-2><named-E><N><n>ZPRODTH</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-2></a-stmt>
<call-stmt>CALL <procedure-designator><named-E><N><n>WRSCMR</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>NMUSCLFA</n></N></named-E></arg>,<arg><string-E><S>'ZPRTH'</S></string-E></arg>, <arg><named-E><N><n>ZTABHL</n></N></named-E></arg>, <arg><named-E><N><n>KLON</n></N></named-E></arg>, <arg><op-E><named-E><N><n>KLEV</n></N></named-E><op><o>+</o></op><literal-E><l>1</l></literal-E></op-E></arg></arg-spec>)</call-stmt>
<a-stmt><E-1><named-E><N><n>ZTABHL</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>, <section-subscript><lower-bound><literal-E><l>1</l></literal-E></lower-bound>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-1><a>=</a><E-2><named-E><N><n>ZDISS</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-2></a-stmt>
<call-stmt>CALL <procedure-designator><named-E><N><n>WRSCMR</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>NMUSCLFA</n></N></named-E></arg>,<arg><string-E><S>'ZDISS'</S></string-E></arg>, <arg><named-E><N><n>ZTABHL</n></N></named-E></arg>, <arg><named-E><N><n>KLON</n></N></named-E></arg>, <arg><op-E><named-E><N><n>KLEV</n></N></named-E><op><o>+</o></op><literal-E><l>1</l></literal-E></op-E></arg></arg-spec>)</call-stmt>
<do-construct><do-stmt>DO <do-V><named-E><N><n>JLEV</n></N></named-E></do-V>=<lower-bound><named-E><N><n>KTDIAT</n></N></named-E></lower-bound>, <upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></do-stmt>
<do-construct><do-stmt>DO <do-V><named-E><N><n>JLON</n></N></named-E></do-V>=<lower-bound><named-E><N><n>KIDIA</n></N></named-E></lower-bound>, <upper-bound><named-E><N><n>KFDIA</n></N></named-E></upper-bound></do-stmt>
<a-stmt><E-1><named-E><N><n>ZTCORTKE</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></E-1><a>=</a><E-2><op-E><named-E><N><n>ZDET</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E><op><o>-</o></op><op-E><named-E><N><n>ZPRODTH</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E><op><o>-</o></op><op-E><named-E><N><n>ZPRDY</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E><op><o>-</o></op><op-E><named-E><N><n>ZDIFF</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E><op><o>-</o></op><named-E><N><n>ZDISS</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></op-E></op-E></op-E></op-E></E-2></a-stmt>
<a-stmt><E-1><named-E><N><n>ZDIFF</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></E-1><a>=</a><E-2><op-E><named-E><N><n>ZDIFF</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E><op><o>+</o></op><named-E><N><n>ZTCORTKE</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></op-E></E-2></a-stmt>
<end-do-stmt>ENDDO</end-do-stmt></do-construct>
<end-do-stmt>ENDDO</end-do-stmt></do-construct>
<a-stmt><E-1><named-E><N><n>ZTABHL</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>, <section-subscript><lower-bound><literal-E><l>1</l></literal-E></lower-bound>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-1><a>=</a><E-2><named-E><N><n>ZDIFF</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-2></a-stmt>
<call-stmt>CALL <procedure-designator><named-E><N><n>WRSCMR</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>NMUSCLFA</n></N></named-E></arg>,<arg><string-E><S>'ZDIFF'</S></string-E></arg>, <arg><named-E><N><n>ZTABHL</n></N></named-E></arg>, <arg><named-E><N><n>KLON</n></N></named-E></arg>, <arg><op-E><named-E><N><n>KLEV</n></N></named-E><op><o>+</o></op><literal-E><l>1</l></literal-E></op-E></arg></arg-spec>)</call-stmt>
<end-if-stmt>ENDIF</end-if-stmt></if-block></if-construct>
<end-if-stmt>ENDIF</end-if-stmt></if-block></if-construct>
<if-construct><if-block><if-then-stmt>IF (<condition-E><named-E><N><n>LFLEXDIA</n></N></named-E></condition-E>) THEN</if-then-stmt>
<a-stmt><E-1><named-E><N><n>ZTABFL</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript>:</section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-1><a>=</a><E-2><literal-E><l>0.</l><K-spec>_<N><n>JPRB</n></N></K-spec></literal-E></E-2></a-stmt>
<a-stmt><E-1><named-E><N><n>ZTABFL</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript><lower-bound><named-E><N><n>KIDIA</n></N></named-E></lower-bound>:<upper-bound><named-E><N><n>KFDIA</n></N></named-E></upper-bound></section-subscript>, <section-subscript><lower-bound><named-E><N><n>KTDIAT</n></N></named-E></lower-bound>:<upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-1><a>=</a><E-2><op-E><named-E><N><n>PDELP</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript><lower-bound><named-E><N><n>KIDIA</n></N></named-E></lower-bound>:<upper-bound><named-E><N><n>KFDIA</n></N></named-E></upper-bound></section-subscript>, <section-subscript><lower-bound><named-E><N><n>KTDIAT</n></N></named-E></lower-bound>:<upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></section-subscript></section-subscript-LT>)</array-R></R-LT></named-E><op><o>*</o></op><named-E><N><n>PECT1</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript><lower-bound><named-E><N><n>KIDIA</n></N></named-E></lower-bound>:<upper-bound><named-E><N><n>KFDIA</n></N></named-E></upper-bound></section-subscript>, <section-subscript><lower-bound><named-E><N><n>KTDIAT</n></N></named-E></lower-bound>:<upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></op-E></E-2></a-stmt>
<if-construct><if-block><if-then-stmt>IF (<condition-E><named-E><N><n>LDDH_OMP</n></N></named-E></condition-E>) THEN</if-then-stmt>
<call-stmt>CALL <procedure-designator><named-E><N><n>NEW_ADD_FIELD_3D</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>YDMDDH</n></N></named-E></arg>, <arg><named-E><N><n>ZTABFL</n></N></named-E></arg>,<arg><string-E><S>'VKE'</S></string-E></arg>, <arg><named-E><N><n>YDDDH</n></N></named-E></arg></arg-spec>)</call-stmt>
</if-block><if-block><else-stmt>ELSE</else-stmt>
<call-stmt>CALL <procedure-designator><named-E><N><n>ADD_FIELD_3D</n></N></named-E></procedure-designator> (<arg-spec><arg><named-E><N><n>YDLDDH</n></N></named-E></arg>, <arg><named-E><N><n>ZTABFL</n></N></named-E></arg>,<arg><string-E><S>'VKE'</S></string-E></arg>,<arg><string-E><S>'V'</S></string-E></arg>,<arg><string-E><S>'ARP'</S></string-E></arg>,<arg><literal-E>.TRUE.</literal-E></arg>,<arg><literal-E>.TRUE.</literal-E></arg></arg-spec>)</call-stmt>
<end-if-stmt>ENDIF</end-if-stmt></if-block></if-construct>
<end-if-stmt>ENDIF</end-if-stmt></if-block></if-construct>
<do-construct><do-stmt>DO <do-V><named-E><N><n>JLEV</n></N></named-E></do-V>=<lower-bound><named-E><N><n>KTDIAT</n></N></named-E></lower-bound>, <upper-bound><named-E><N><n>KLEV</n></N></named-E></upper-bound></do-stmt>
<do-construct><do-stmt>DO <do-V><named-E><N><n>JLON</n></N></named-E></do-V>=<lower-bound><named-E><N><n>KIDIA</n></N></named-E></lower-bound>, <upper-bound><named-E><N><n>KFDIA</n></N></named-E></upper-bound></do-stmt>
<a-stmt><E-1><named-E><N><n>PFECT</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></E-1><a>=</a><E-2><op-E><named-E><N><n>PFECT</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><op-E><named-E><N><n>JLEV</n></N></named-E><op><o>-</o></op><literal-E><l>1</l></literal-E></op-E></element></element-LT>)</parens-R></R-LT></named-E><op><o>-</o></op><op-E><named-E><N><n>ZDET</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E><op><o>*</o></op><named-E><N><n>ZDELPSG</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></op-E></op-E></E-2></a-stmt>
<a-stmt><E-1><named-E><N><n>PFECTI</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></E-1><a>=</a><E-2><named-E><N><n>ZDET</n></N> <R-LT><parens-R>(<element-LT><element><named-E><N><n>JLON</n></N></named-E></element>, <element><named-E><N><n>JLEV</n></N></named-E></element></element-LT>)</parens-R></R-LT></named-E></E-2></a-stmt>
<end-do-stmt>ENDDO</end-do-stmt></do-construct>
<end-do-stmt>ENDDO</end-do-stmt></do-construct>
<end-associate-stmt>ENDASSOCIATE</end-associate-stmt></associate-construct>
<if-stmt>IF (<condition-E><named-E><N><n>LHOOK</n></N></named-E></condition-E>) <action-stmt><call-stmt>CALL <procedure-designator><named-E><N><n>DR_HOOK</n></N></named-E></procedure-designator> (<arg-spec><arg><string-E><S>'ACTKE'</S></string-E></arg>, <arg><literal-E><l>1</l></literal-E></arg>, <arg><named-E><N><n>ZHOOK_HANDLE</n></N></named-E></arg></arg-spec>)</call-stmt></action-stmt></if-stmt>
<end-subroutine-stmt>ENDSUBROUTINE <subroutine-N><N><n>ACTKE</n></N></subroutine-N></end-subroutine-stmt></program-unit>
</file></object>
