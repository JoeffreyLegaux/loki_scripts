<?xml version="1.0"?><object xmlns="http://fxtran.net/#syntax" source-form="FREE" source-width="500" openmp="0" openacc="0"><file name="src/local/ifsaux/openacc/arpifs/phys_dmn/mf_phys_bayrad_openacc.F90"><program-unit><subroutine-stmt>SUBROUTINE <subroutine-N><N><n>MF_PHYS_BAYRAD_OPENACC</n></N></subroutine-N> (<dummy-arg-LT><arg-N><N><n>YDCPG_BNDS</n></N></arg-N>, <arg-N><N><n>YDCPG_OPTS</n></N></arg-N>, <arg-N><N><n>PBAY_QRCONV</n></N></arg-N><cnt>&amp;</cnt>
<cnt>&amp;</cnt>, <arg-N><N><n>PBAY_QSCONV</n></N></arg-N>, <arg-N><N><n>PRCONV_T1</n></N></arg-N>, <arg-N><N><n>PSCONV_T1</n></N></arg-N>, <arg-N><N><n>YDMODEL</n></N></arg-N>, <arg-N><N><n>YDSTACK</n></N></arg-N></dummy-arg-LT>)</subroutine-stmt>
<C>!$acc routine (MF_PHYS_BAYRAD_OPENACC) seq</C>

<use-stmt>USE <module-N><N><n>PARKIND1</n></N></module-N>,ONLY:<rename-LT><rename><use-N><N><n>JPIM</n></N></use-N></rename>, <rename><use-N><N><n>JPRB</n></N></use-N></rename></rename-LT></use-stmt>
<use-stmt>USE <module-N><N><n>FIELD_VARIABLES_MOD</n></N></module-N>,ONLY:<rename-LT><rename><use-N><N><n>FIELD_VARIABLES</n></N></use-N></rename></rename-LT></use-stmt>
<use-stmt>USE <module-N><N><n>TYPE_MODEL</n></N></module-N>,ONLY:<rename-LT><rename><use-N><N><n>MODEL</n></N></use-N></rename></rename-LT></use-stmt>
<use-stmt>USE <module-N><N><n>CPG_OPTS_TYPE_MOD</n></N></module-N>,ONLY:<rename-LT><rename><use-N><N><n>CPG_BNDS_TYPE</n></N></use-N></rename>, <rename><use-N><N><n>CPG_OPTS_TYPE</n></N></use-N></rename></rename-LT></use-stmt>
<use-stmt>USE <module-N><N><n>STACK_MOD</n></N></module-N></use-stmt>
<include>#include &quot;<filename>stack.h</filename>&quot;</include>

<implicit-none-stmt>IMPLICIT NONE</implicit-none-stmt>

<T-decl-stmt><_T-spec_><derived-T-spec>TYPE (<T-N><N><n>CPG_BNDS_TYPE</n></N></T-N>)</derived-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>YDCPG_BNDS</n></N></EN-N></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><derived-T-spec>TYPE (<T-N><N><n>CPG_OPTS_TYPE</n></N></T-N>)</derived-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>YDCPG_OPTS</n></N></EN-N></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PBAY_QRCONV</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>YDCPG_OPTS</n></N><R-LT><component-R>%<ct>KLON</ct></component-R></R-LT></named-E></upper-bound></shape-spec>, <shape-spec><lower-bound><literal-E><l>1</l></literal-E></lower-bound>:<upper-bound><named-E><N><n>YDCPG_OPTS</n></N><R-LT><component-R>%<ct>KFLEVG</ct></component-R></R-LT></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PBAY_QSCONV</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>YDCPG_OPTS</n></N><R-LT><component-R>%<ct>KLON</ct></component-R></R-LT></named-E></upper-bound></shape-spec>, <shape-spec><lower-bound><literal-E><l>1</l></literal-E></lower-bound>:<upper-bound><named-E><N><n>YDCPG_OPTS</n></N><R-LT><component-R>%<ct>KFLEVG</ct></component-R></R-LT></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>OUT</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PRCONV_T1</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>YDCPG_OPTS</n></N><R-LT><component-R>%<ct>KLON</ct></component-R></R-LT></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>YDCPG_OPTS</n></N><R-LT><component-R>%<ct>KFLEVG</ct></component-R></R-LT></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>REAL</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPRB</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>OUT</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>PSCONV_T1</n></N></EN-N> <array-spec>(<shape-spec-LT><shape-spec><upper-bound><named-E><N><n>YDCPG_OPTS</n></N><R-LT><component-R>%<ct>KLON</ct></component-R></R-LT></named-E></upper-bound></shape-spec>, <shape-spec><upper-bound><named-E><N><n>YDCPG_OPTS</n></N><R-LT><component-R>%<ct>KFLEVG</ct></component-R></R-LT></named-E></upper-bound></shape-spec></shape-spec-LT>)</array-spec></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><derived-T-spec>TYPE (<T-N><N><n>MODEL</n></N></T-N>)</derived-T-spec></_T-spec_>, <attribute><attribute-N>INTENT</attribute-N> (<intent-spec>IN</intent-spec>)</attribute>::<EN-decl-LT><EN-decl><EN-N><N><n>YDMODEL</n></N></EN-N></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><derived-T-spec>TYPE(<T-N><N><n>STACK</n></N></T-N>)</derived-T-spec></_T-spec_> :: <EN-decl-LT><EN-decl><EN-N><N><n>YDSTACK</n></N></EN-N></EN-decl></EN-decl-LT></T-decl-stmt>
<T-decl-stmt><_T-spec_><derived-T-spec>TYPE(<T-N><N><n>STACK</n></N></T-N>)</derived-T-spec></_T-spec_> :: <EN-decl-LT><EN-decl><EN-N><N><n>YLSTACK</n></N></EN-N></EN-decl></EN-decl-LT></T-decl-stmt>

<T-decl-stmt><_T-spec_><intrinsic-T-spec><T-N>INTEGER</T-N> <K-selector>(<K-spec><arg-N n="KIND"><k>KIND</k></arg-N>=<named-E><N><n>JPIM</n></N></named-E></K-spec>)</K-selector></intrinsic-T-spec></_T-spec_> :: <EN-decl-LT><EN-decl><EN-N><N><n>JLON</n></N></EN-N></EN-decl></EN-decl-LT></T-decl-stmt>

<a-stmt><E-1><named-E><N><n>YLSTACK</n></N></named-E></E-1> <a>=</a> <E-2><named-E><N><n>YDSTACK</n></N></named-E></E-2></a-stmt>




<a-stmt><E-1><named-E><N><n>JLON</n></N></named-E></E-1> <a>=</a> <E-2><named-E><N><n>YDCPG_BNDS</n></N><R-LT><component-R>%<ct>KIDIA</ct></component-R></R-LT></named-E></E-2></a-stmt>


<if-construct><if-block><if-then-stmt>IF (<condition-E><op-E><parens-E>(<op-E><op><o>.NOT.</o></op><named-E><N><n>YDMODEL</n></N><R-LT><component-R>%<ct>YRML_PHY_MF</ct></component-R><component-R>%<ct>YRPHY</ct></component-R><component-R>%<ct>LGPCMT</ct></component-R></R-LT></named-E></op-E>)</parens-E><op><o>.AND.</o></op><parens-E>(<op-E><op><o>.NOT.</o></op><named-E><N><n>YDCPG_OPTS</n></N><R-LT><component-R>%<ct>LAROME</ct></component-R></R-LT></named-E></op-E>)</parens-E></op-E></condition-E>) THEN</if-then-stmt>

  <if-construct><if-block><if-then-stmt>IF (<condition-E><named-E><N><n>YDMODEL</n></N><R-LT><component-R>%<ct>YRML_GCONF</ct></component-R><component-R>%<ct>YGFL</ct></component-R><component-R>%<ct>YRCONV</ct></component-R><component-R>%<ct>LACTIVE</ct></component-R></R-LT></named-E></condition-E>) THEN</if-then-stmt>
    <a-stmt><E-1><named-E><N><n>PRCONV_T1</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript><lower-bound><named-E><N><n>JLON</n></N></named-E></lower-bound></section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-1><a>=</a><E-2><named-E><N><n>PBAY_QRCONV</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript><lower-bound><named-E><N><n>JLON</n></N></named-E></lower-bound></section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-2></a-stmt>
  <end-if-stmt>ENDIF</end-if-stmt></if-block></if-construct>


  <if-construct><if-block><if-then-stmt>IF (<condition-E><named-E><N><n>YDMODEL</n></N><R-LT><component-R>%<ct>YRML_GCONF</ct></component-R><component-R>%<ct>YGFL</ct></component-R><component-R>%<ct>YSCONV</ct></component-R><component-R>%<ct>LACTIVE</ct></component-R></R-LT></named-E></condition-E>) THEN</if-then-stmt>
    <a-stmt><E-1><named-E><N><n>PSCONV_T1</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript><lower-bound><named-E><N><n>JLON</n></N></named-E></lower-bound></section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-1><a>=</a><E-2><named-E><N><n>PBAY_QSCONV</n></N> <R-LT><array-R>(<section-subscript-LT><section-subscript><lower-bound><named-E><N><n>JLON</n></N></named-E></lower-bound></section-subscript>,<section-subscript>:</section-subscript></section-subscript-LT>)</array-R></R-LT></named-E></E-2></a-stmt>
  <end-if-stmt>ENDIF</end-if-stmt></if-block></if-construct>

<end-if-stmt>ENDIF</end-if-stmt></if-block></if-construct>


<end-subroutine-stmt>ENDSUBROUTINE <subroutine-N><N><n>MF_PHYS_BAYRAD_OPENACC</n></N></subroutine-N></end-subroutine-stmt></program-unit>

<C>! 56ad6923076b622f9a4a36289517d0f4b37156a2</C>
</file></object>
